const { DataTypes } = require('sequelize')

module.exports = sequelize => {
    const attributes = {
        member_id: {
            type: DataTypes.STRING(32),
            allowNull: false,
            primaryKey: true,
            autoIncrement: false,
            comment: '俱乐部会员id',
            field: 'member_id',
        },
        create_time: {
            type: DataTypes.DATE,
            allowNull: false,
            defaultValue: sequelize.literal('CURRENT_TIMESTAMP'),
            primaryKey: false,
            autoIncrement: false,
            comment: '创建时间',
            field: 'create_time',
        },
        name: {
            type: DataTypes.STRING(32),
            allowNull: false,
            defaultValue: '',
            primaryKey: false,
            autoIncrement: false,
            comment: '姓名',
            field: 'name',
        },
        age: {
            type: DataTypes.INTEGER(6),
            allowNull: true,
            defaultValue: null,
            primaryKey: false,
            autoIncrement: false,
            comment: '年龄',
            field: 'age',
        },
        mobile: {
            type: DataTypes.STRING(20),
            allowNull: false,
            defaultValue: '',
            primaryKey: false,
            autoIncrement: false,
            comment: '手机',
            field: 'mobile',
        },
        birthday: {
            type: DataTypes.DATEONLY,
            allowNull: true,
            defaultValue: null,
            primaryKey: false,
            autoIncrement: false,
            comment: '生日',
            field: 'birthday',
        },
        head_path: {
            type: DataTypes.STRING(255),
            allowNull: false,
            defaultValue: '',
            primaryKey: false,
            autoIncrement: false,
            comment: '头像图片相对路径',
            field: 'head_path',
        },
        gender: {
            type: DataTypes.INTEGER(6),
            allowNull: false,
            defaultValue: '1',
            primaryKey: false,
            autoIncrement: false,
            comment: '性别(0:未填 1:男 2:女)',
            field: 'gender',
        },
        weight: {
            type: DataTypes.STRING(20),
            allowNull: false,
            defaultValue: '',
            primaryKey: false,
            autoIncrement: false,
            comment: '体重(kg)',
            field: 'weight',
        },
        height: {
            type: DataTypes.STRING(20),
            allowNull: false,
            defaultValue: '',
            primaryKey: false,
            autoIncrement: false,
            comment: '身高(cm)',
            field: 'height',
        },
        email: {
            type: DataTypes.STRING(100),
            allowNull: false,
            defaultValue: '',
            primaryKey: false,
            autoIncrement: false,
            comment: '邮箱',
            field: 'email',
        },
        update_time: {
            type: DataTypes.DATE,
            allowNull: true,
            defaultValue: null,
            primaryKey: false,
            autoIncrement: false,
            comment: '修改时间',
            field: 'update_time',
        },
        update_by: {
            type: DataTypes.STRING(32),
            allowNull: false,
            defaultValue: '',
            primaryKey: false,
            autoIncrement: false,
            comment: '修改人',
            field: 'update_by',
        },
        is_delete: {
            type: DataTypes.INTEGER(4),
            allowNull: false,
            defaultValue: '0',
            primaryKey: false,
            autoIncrement: false,
            comment: '全部只做逻辑删除,不做物理删除 1删除,0未删除',
            field: 'is_delete',
        },
        nick_name: {
            type: DataTypes.STRING(32),
            allowNull: false,
            defaultValue: '',
            primaryKey: false,
            autoIncrement: false,
            comment: '昵称',
            field: 'nick_name',
        },
    }
    const options = {
        tableName: 'b_member',
        comment: '',
    }
    const MemberModel = sequelize.define('b_member_model', attributes, options)
    return MemberModel
}
